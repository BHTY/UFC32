PEXC[0, 54]["void", "main", "(", ")", "{", "u32", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "}", "}"]
 +-PEXC.Program[0, 54]["void", "main", "(", ")", "{", "u32", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "}", "}"]
    +-PEXC.FunctionDecl[0, 54]["void", "main", "(", ")", "{", "u32", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "}", "}"]
       +-identifier[5, 9]["main"]
       +-PEXC.ArgumentList[9, 12]["(", ")"]
       +-PEXC.Statement[12, 54]["{", "u32", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "}", "}"]
          +-PEXC.BlockStatement[12, 54]["{", "u32", "i", ";", "for", "(", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "}", "}"]
             +-PEXC.Statement[15, 23]["u32", "i", ";"]
             |  +-PEXC.LocalDecl[15, 23]["u32", "i", ";"]
             +-PEXC.Statement[23, 52]["for", "(", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "}"]
                +-PEXC.ForStatement[23, 52]["for", "(", "i", "=", "0", ";", "i", "<", "10", ";", "i", "++", ")", "{", "}"]
                   +-PEXC.ExpressionStatement[27, 32]["i", "=", "0"]
                   |  +-PEXC.LValue[27, 29]["i"]
                   |  |  +-identifier[27, 29]["i"]
                   |  +-or!(wrapAround!(spacing, literal!("="), spacing), wrapAround!(spacing, literal!("+="), spacing), wrapAround!(spacing, literal!("-="), spacing), wrapAround!(spacing, literal!("*="), spacing), wrapAround!(spacing, literal!("/="), spacing), wrapAround!(spacing, literal!("&="), spacing), wrapAround!(spacing, literal!("|="), spacing), wrapAround!(spacing, literal!("<<="), spacing), wrapAround!(spacing, literal!(">>="), spacing))[29, 31]["="]
                   |  |  +-literal!("=")[29, 31]["="]
                   |  +-PEXC.RValue[31, 32]["0"]
                   |     +-PEXC.ExprLogOr[31, 32]["0"]
                   |        +-PEXC.ExprLogAnd[31, 32]["0"]
                   |           +-PEXC.ExprBitOr[31, 32]["0"]
                   |              +-PEXC.ExprBitXor[31, 32]["0"]
                   |                 +-PEXC.ExprBitAnd[31, 32]["0"]
                   |                    +-PEXC.ExprEq[31, 32]["0"]
                   |                       +-PEXC.ExprCmp[31, 32]["0"]
                   |                          +-PEXC.ExprShift[31, 32]["0"]
                   |                             +-PEXC.ExprAdd[31, 32]["0"]
                   |                                +-PEXC.ExprMul[31, 32]["0"]
                   |                                   +-PEXC.ExprPrefixes[31, 32]["0"]
                   |                                      +-PEXC.ExprIndexed[31, 32]["0"]
                   |                                         +-PEXC.ExprAtom[31, 32]["0"]
                   |                                            +-PEXC.IntLiteral[31, 32]["0"]
                   +-PEXC.RValue[34, 40]["i", "<", "10"]
                   |  +-PEXC.ExprLogOr[34, 40]["i", "<", "10"]
                   |     +-PEXC.ExprLogAnd[34, 40]["i", "<", "10"]
                   |        +-PEXC.ExprBitOr[34, 40]["i", "<", "10"]
                   |           +-PEXC.ExprBitXor[34, 40]["i", "<", "10"]
                   |              +-PEXC.ExprBitAnd[34, 40]["i", "<", "10"]
                   |                 +-PEXC.ExprEq[34, 40]["i", "<", "10"]
                   |                    +-PEXC.ExprCmp[34, 40]["i", "<", "10"]
                   |                       +-PEXC.ExprShift[34, 36]["i"]
                   |                       |  +-PEXC.ExprAdd[34, 36]["i"]
                   |                       |     +-PEXC.ExprMul[34, 36]["i"]
                   |                       |        +-PEXC.ExprPrefixes[34, 36]["i"]
                   |                       |           +-PEXC.ExprIndexed[34, 36]["i"]
                   |                       |              +-PEXC.ExprAtom[34, 36]["i"]
                   |                       |                 +-identifier[34, 36]["i"]
                   |                       +-or!(wrapAround!(spacing, literal!("<="), spacing), wrapAround!(spacing, literal!(">="), spacing), wrapAround!(spacing, literal!("<"), spacing), wrapAround!(spacing, literal!(">"), spacing))[36, 38]["<"]
                   |                       |  +-literal!("<")[36, 38]["<"]
                   |                       +-PEXC.ExprCmp[38, 40]["10"]
                   |                          +-PEXC.ExprShift[38, 40]["10"]
                   |                             +-PEXC.ExprAdd[38, 40]["10"]
                   |                                +-PEXC.ExprMul[38, 40]["10"]
                   |                                   +-PEXC.ExprPrefixes[38, 40]["10"]
                   |                                      +-PEXC.ExprIndexed[38, 40]["10"]
                   |                                         +-PEXC.ExprAtom[38, 40]["10"]
                   |                                            +-PEXC.IntLiteral[38, 40]["10"]
                   +-PEXC.ExpressionStatement[42, 45]["i", "++"]
                   |  +-PEXC.RValue[42, 45]["i", "++"]
                   |     +-PEXC.ExprLogOr[42, 45]["i", "++"]
                   |        +-PEXC.ExprLogAnd[42, 45]["i", "++"]
                   |           +-PEXC.ExprBitOr[42, 45]["i", "++"]
                   |              +-PEXC.ExprBitXor[42, 45]["i", "++"]
                   |                 +-PEXC.ExprBitAnd[42, 45]["i", "++"]
                   |                    +-PEXC.ExprEq[42, 45]["i", "++"]
                   |                       +-PEXC.ExprCmp[42, 45]["i", "++"]
                   |                          +-PEXC.ExprShift[42, 45]["i", "++"]
                   |                             +-PEXC.ExprAdd[42, 45]["i", "++"]
                   |                                +-PEXC.ExprMul[42, 45]["i", "++"]
                   |                                   +-PEXC.ExprPrefixes[42, 45]["i", "++"]
                   |                                      +-PEXC.ExprIndexed[42, 45]["i", "++"]
                   |                                         +-PEXC.ExprAtom[42, 45]["i", "++"]
                   |                                            +-identifier[42, 43]["i"]
                   +-PEXC.Statement[47, 52]["{", "}"]
                      +-PEXC.BlockStatement[47, 52]["{", "}"]
