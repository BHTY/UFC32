PEXC[0, 73]["void", "main", "(", ")", "{", "u32", "x", ";", "u32", "s", ";", "for", "(", "x", "=", "0", ";", "x", "<", "10", ";", "x", "++", ")", "{", "s", "+=", "x", ";", "}", "}"]
 +-PEXC.Program[0, 73]["void", "main", "(", ")", "{", "u32", "x", ";", "u32", "s", ";", "for", "(", "x", "=", "0", ";", "x", "<", "10", ";", "x", "++", ")", "{", "s", "+=", "x", ";", "}", "}"]
    +-PEXC.FunctionDecl[0, 73]["void", "main", "(", ")", "{", "u32", "x", ";", "u32", "s", ";", "for", "(", "x", "=", "0", ";", "x", "<", "10", ";", "x", "++", ")", "{", "s", "+=", "x", ";", "}", "}"]
       +-identifier[5, 9]["main"]
       +-PEXC.ArgumentList[9, 12]["(", ")"]
       +-PEXC.Statement[12, 73]["{", "u32", "x", ";", "u32", "s", ";", "for", "(", "x", "=", "0", ";", "x", "<", "10", ";", "x", "++", ")", "{", "s", "+=", "x", ";", "}", "}"]
          +-PEXC.BlockStatement[12, 73]["{", "u32", "x", ";", "u32", "s", ";", "for", "(", "x", "=", "0", ";", "x", "<", "10", ";", "x", "++", ")", "{", "s", "+=", "x", ";", "}", "}"]
             +-PEXC.Statement[15, 23]["u32", "x", ";"]
             |  +-PEXC.LocalDecl[15, 23]["u32", "x", ";"]
             +-PEXC.Statement[23, 31]["u32", "s", ";"]
             |  +-PEXC.LocalDecl[23, 31]["u32", "s", ";"]
             +-PEXC.Statement[31, 71]["for", "(", "x", "=", "0", ";", "x", "<", "10", ";", "x", "++", ")", "{", "s", "+=", "x", ";", "}"]
                +-PEXC.ForStatement[31, 71]["for", "(", "x", "=", "0", ";", "x", "<", "10", ";", "x", "++", ")", "{", "s", "+=", "x", ";", "}"]
                   +-PEXC.ExpressionStatement[36, 41]["x", "=", "0"]
                   |  +-PEXC.LValue[36, 38]["x"]
                   |  |  +-identifier[36, 38]["x"]
                   |  +-or!(wrapAround!(spacing, literal!("="), spacing), wrapAround!(spacing, literal!("+="), spacing), wrapAround!(spacing, literal!("-="), spacing), wrapAround!(spacing, literal!("*="), spacing), wrapAround!(spacing, literal!("/="), spacing), wrapAround!(spacing, literal!("&="), spacing), wrapAround!(spacing, literal!("|="), spacing), wrapAround!(spacing, literal!("<<="), spacing), wrapAround!(spacing, literal!(">>="), spacing))[38, 40]["="]
                   |  |  +-literal!("=")[38, 40]["="]
                   |  +-PEXC.RValue[40, 41]["0"]
                   |     +-PEXC.ExprLogOr[40, 41]["0"]
                   |        +-PEXC.ExprLogAnd[40, 41]["0"]
                   |           +-PEXC.ExprBitOr[40, 41]["0"]
                   |              +-PEXC.ExprBitXor[40, 41]["0"]
                   |                 +-PEXC.ExprBitAnd[40, 41]["0"]
                   |                    +-PEXC.ExprEq[40, 41]["0"]
                   |                       +-PEXC.ExprCmp[40, 41]["0"]
                   |                          +-PEXC.ExprShift[40, 41]["0"]
                   |                             +-PEXC.ExprAdd[40, 41]["0"]
                   |                                +-PEXC.ExprMul[40, 41]["0"]
                   |                                   +-PEXC.ExprPrefixes[40, 41]["0"]
                   |                                      +-PEXC.ExprIndexed[40, 41]["0"]
                   |                                         +-PEXC.ExprAtom[40, 41]["0"]
                   |                                            +-PEXC.IntLiteral[40, 41]["0"]
                   +-PEXC.RValue[43, 49]["x", "<", "10"]
                   |  +-PEXC.ExprLogOr[43, 49]["x", "<", "10"]
                   |     +-PEXC.ExprLogAnd[43, 49]["x", "<", "10"]
                   |        +-PEXC.ExprBitOr[43, 49]["x", "<", "10"]
                   |           +-PEXC.ExprBitXor[43, 49]["x", "<", "10"]
                   |              +-PEXC.ExprBitAnd[43, 49]["x", "<", "10"]
                   |                 +-PEXC.ExprEq[43, 49]["x", "<", "10"]
                   |                    +-PEXC.ExprCmp[43, 49]["x", "<", "10"]
                   |                       +-PEXC.ExprShift[43, 45]["x"]
                   |                       |  +-PEXC.ExprAdd[43, 45]["x"]
                   |                       |     +-PEXC.ExprMul[43, 45]["x"]
                   |                       |        +-PEXC.ExprPrefixes[43, 45]["x"]
                   |                       |           +-PEXC.ExprIndexed[43, 45]["x"]
                   |                       |              +-PEXC.ExprAtom[43, 45]["x"]
                   |                       |                 +-identifier[43, 45]["x"]
                   |                       +-or!(wrapAround!(spacing, literal!("<"), spacing), wrapAround!(spacing, literal!(">"), spacing), wrapAround!(spacing, literal!("<="), spacing), wrapAround!(spacing, literal!(">="), spacing))[45, 47]["<"]
                   |                       |  +-literal!("<")[45, 47]["<"]
                   |                       +-PEXC.ExprCmp[47, 49]["10"]
                   |                          +-PEXC.ExprShift[47, 49]["10"]
                   |                             +-PEXC.ExprAdd[47, 49]["10"]
                   |                                +-PEXC.ExprMul[47, 49]["10"]
                   |                                   +-PEXC.ExprPrefixes[47, 49]["10"]
                   |                                      +-PEXC.ExprIndexed[47, 49]["10"]
                   |                                         +-PEXC.ExprAtom[47, 49]["10"]
                   |                                            +-PEXC.IntLiteral[47, 49]["10"]
                   +-PEXC.ExpressionStatement[51, 54]["x", "++"]
                   |  +-PEXC.RValue[51, 54]["x", "++"]
                   |     +-PEXC.ExprLogOr[51, 54]["x", "++"]
                   |        +-PEXC.ExprLogAnd[51, 54]["x", "++"]
                   |           +-PEXC.ExprBitOr[51, 54]["x", "++"]
                   |              +-PEXC.ExprBitXor[51, 54]["x", "++"]
                   |                 +-PEXC.ExprBitAnd[51, 54]["x", "++"]
                   |                    +-PEXC.ExprEq[51, 54]["x", "++"]
                   |                       +-PEXC.ExprCmp[51, 54]["x", "++"]
                   |                          +-PEXC.ExprShift[51, 54]["x", "++"]
                   |                             +-PEXC.ExprAdd[51, 54]["x", "++"]
                   |                                +-PEXC.ExprMul[51, 54]["x", "++"]
                   |                                   +-PEXC.ExprPrefixes[51, 54]["x", "++"]
                   |                                      +-PEXC.ExprIndexed[51, 54]["x", "++"]
                   |                                         +-PEXC.ExprAtom[51, 54]["x", "++"]
                   |                                            +-identifier[51, 52]["x"]
                   +-PEXC.Statement[56, 71]["{", "s", "+=", "x", ";", "}"]
                      +-PEXC.BlockStatement[56, 71]["{", "s", "+=", "x", ";", "}"]
                         +-PEXC.Statement[60, 69]["s", "+=", "x", ";"]
                            +-PEXC.ExpressionStatement[60, 66]["s", "+=", "x"]
                               +-PEXC.LValue[60, 62]["s"]
                               |  +-identifier[60, 62]["s"]
                               +-or!(wrapAround!(spacing, literal!("="), spacing), wrapAround!(spacing, literal!("+="), spacing), wrapAround!(spacing, literal!("-="), spacing), wrapAround!(spacing, literal!("*="), spacing), wrapAround!(spacing, literal!("/="), spacing), wrapAround!(spacing, literal!("&="), spacing), wrapAround!(spacing, literal!("|="), spacing), wrapAround!(spacing, literal!("<<="), spacing), wrapAround!(spacing, literal!(">>="), spacing))[62, 65]["+="]
                               |  +-literal!("+=")[62, 65]["+="]
                               +-PEXC.RValue[65, 66]["x"]
                                  +-PEXC.ExprLogOr[65, 66]["x"]
                                     +-PEXC.ExprLogAnd[65, 66]["x"]
                                        +-PEXC.ExprBitOr[65, 66]["x"]
                                           +-PEXC.ExprBitXor[65, 66]["x"]
                                              +-PEXC.ExprBitAnd[65, 66]["x"]
                                                 +-PEXC.ExprEq[65, 66]["x"]
                                                    +-PEXC.ExprCmp[65, 66]["x"]
                                                       +-PEXC.ExprShift[65, 66]["x"]
                                                          +-PEXC.ExprAdd[65, 66]["x"]
                                                             +-PEXC.ExprMul[65, 66]["x"]
                                                                +-PEXC.ExprPrefixes[65, 66]["x"]
                                                                   +-PEXC.ExprIndexed[65, 66]["x"]
                                                                      +-PEXC.ExprAtom[65, 66]["x"]
                                                                         +-identifier[65, 66]["x"]
